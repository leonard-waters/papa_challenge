<.header>
  Listing Available Visit Requests
  <:actions>
    <.link patch={~p"/visits/request"}>
      <%= if @current_user.balance_in_minutes >= 0 do %>
        <.button>Request Visit</.button>
      <% else %>
        <.button phx-disable-with="Balance Zero">Request Visit</.button>
      <% end %>
    </.link>
  </:actions>
</.header>
<.table id="visits" rows={@streams.visits}>
  <:col :let={{_id, visit}} label="Start Date and Time">
    <%= NaiveDateTime.to_string(visit.start_datetime) %>
  </:col>
  <:col :let={{_id, visit}} label="End Date and Time">
    <%= if visit.end_datetime do %>
      <%= NaiveDateTime.to_string(visit.end_datetime) %>
    <% end %>
  </:col>
  <:col :let={{_id, visit}} label="Tasks"><%= Enum.join(visit.tasks, ", ") %></:col>
  <:col :let={{_id, visit}} label="Minutes"><%= visit.minutes %></:col>
  <:col :let={{_id, visit}} label="Status"><%= visit.status %></:col>

  <:action :let={{_id, visit}}>
    <%= if visit.status != :fulfilled do %>
      <%= if @current_user.id == visit.member_id do %>
        <.link patch={~p"/visits/#{visit.id}/edit"}> Edit </.link>
      <% else %>
        <.link patch={~p"/visits/#{visit.id}/fulfill"}> Fulfill </.link>
      <% end %>
    <% end %>
  </:action>
</.table>
<.modal
  :if={@live_action in [:request, :edit, :fulfill]}
  id="visit-modal"
  show
  on_cancel={JS.patch(~p"/visits")}
>
  <.live_component
    module={PapaChallengeWeb.VisitLive.FormComponent}
    id={@visit.id || :request || :fulfill}
    title={@page_title}
    action={@live_action}
    visit={@visit}
    current_user={@current_user}
    patch={~p"/visits"}
  />
</.modal>
